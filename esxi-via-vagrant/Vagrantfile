# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "geerlingguy/debian10"
  config.vm.box = "generic/ubuntu2004"
  config.ssh.insert_key = false
  config.vm.provider "vmware_esxi"
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provider :vmware_esxi do |v|
    v.esxi_hostname = 'myesxi.ag6hq.net'
    v.esxi_username = 'root'
    v.esxi_password = 'file:~/.ssh/esxirootpw'
    v.debug = 'true'

    v.guest_memsize = 2048
    v.guest_numvcpus = 2
    v.guest_disk_type = 'thin'
    v.guest_storage = [ 64, 16, 16 ]
    v.guest_virtualhw_version = 19
    v.esxi_virtual_network = ['VM Network']
    v.esxi_disk_store = 'datastore1'

    # v.linked_clone = true
    # v.customize ['modifyvm', :id, '--audio', 'none']
  end

  # Define three VMs with static private IP addresses.
  boxes = [
    { :name => "kube1", :ip => "192.168.2.41" },
    { :name => "kube2", :ip => "192.168.2.42" },
    { :name => "kube3", :ip => "192.168.2.43" }
  ]

  # Configure each of the VMs.
  boxes.each_with_index do |opts, index|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name] + ".ag6hq.net"
      config.vm.network :public_network, ip: opts[:ip]

      # Provision all the VMs using Ansible after last VM is up.
      if index == boxes.size - 1
        config.vm.provision "ansible" do |ansible|
          ansible.compatibility_mode = "2.0"
          # ansible.playbook = "main.yml"
          ansible.playbook = "justping.yaml"
          ansible.inventory_path = "inventory"
          ansible.limit = "all"
        end
      end
    end
  end

end

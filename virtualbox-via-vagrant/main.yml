---
- name: A Playbook that installs kubernetes on remote hosts
  hosts: kube
  become: true

  vars_files:
    - vars/main.yml

  pre_tasks:
    - include_tasks: tasks/vagrant-setup.yml

  roles:
    - geerlingguy.security
    - geerlingguy.swap
    - geerlingguy.docker
    - geerlingguy.kubernetes

  tasks:
  - name: Install Packages
    apt:
      name: 
      - python3-pip
      - curl
      state: present

  - name: Copy admin.conf to temp location
    ansible.builtin.copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: /tmp/config.{{ cluster_name }}
    when: kubernetes_role == 'master'

  - name: Rename kubernetes-admin to cluster_name-admin
    ansible.builtin.replace:
      path: /tmp/config.{{ cluster_name }}
      regexp: 'kubernetes-admin'
      replace: "{{ cluster_name }}-admin"
    when: kubernetes_role == 'master'

  - name: Fetch the file from the master to ansible
    run_once: yes
    fetch: 
      src: /tmp/config.{{ cluster_name }}
      dest: "~/.kube/config.{{ cluster_name }}"
      flat: yes
    when: kubernetes_role == 'master'
  
# - name: A play that runs entirely on the ansible host
#   hosts: thisHost
#   connection: local

#   vars_files:
#   - vars/main.yml

#   tasks:

#   - name: Merge new kube config with current
#     ansible.builtin.shell:
#       cmd: "KUBECONFIG=~/.kube/config:~/.kube/config.{{ cluster_name }} kubectl config view --flatten > ~/.kube/config.new"
#     when: kubeAdminRenamed.changed
#     register: kubeConfigMerged

#   - name: Backup old kube config
#     ansible.builtin.copy:
#       src: ~/.kube/config
#       dest: ~/.kube/config.old
#     when: kubeConfigMerged.changed

#   - name: Use new kube config
#     ansible.builtin.copy:
#       src: ~/.kube/config.new
#       dest: ~/.kube/config
#     when: kubeConfigMerged.changed